package work_10_18_01;

/*
 * 异常分为Exception和Error：
 * Exception是 经过修正以后还能运行的错误，包括RuntimeException和其他异常，
 * 				RuntimeException是设计或实现方面的问题， 只需要修正错误；
 * 				其他异常是因为环境的影响可能发生和处理的异常。
 * Error是指程序遇到了非常严重的错误， 不能简单恢复执行。
 * 抛出异常:
 * 	若发生了可处理的异常， 正在运行的程序创建一个异常对象。
 * 捕捉异常：
 * 	JVM捕获到异常对象时， 寻找异常对象的处理代码。
 *throw：
 *	将产生的异常抛出， 强调动作， 既可以抛出异常的引用， 也可以抛出异常的对象。常用于
 *主动抛出异常， 将异常对象提交给调用者。
 *throws：
 *	一个方法可能会产生异常， 但是没有能力处理这种异常，可以在方法声明处用throws子
 *句来声明抛出异常， 用throws修饰的方法， 向调用者表明该方法可能会抛出异常， 可能是一
 *种类型， 也可以是多种类型。
 *	try―catch―finally语句执行过程：
 *try{
 *	可能发生异常的语句；			// 指明可能产生异常的代码段
 *}
 *catch（异常类型1 异常对象1）{		// 捕捉异常
 *	异常处理语句1；
 *}
 *catch(异常类型2 异常对象2）{
 *	异常处理语句2；
 *}
 *...
 *finally{	// 无论是否捕捉到异常都会执行				
 *	异常结束前的执行语句；
 *}
 *多个catch语句时， 系统依次检查， 父类在前， 子类在后。	
 */
